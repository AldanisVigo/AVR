   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.rodata.str1.1,"aMS",@progbits,1
  11               	.LC0:
  12 0000 4C78 203D 		.string	"Lx = 15uH "
  12      2031 3575 
  12      4820 00
  13               	.LC1:
  14 000b 4378 203D 		.string	"Cx = 150uF"
  14      2031 3530 
  14      7546 00
  15               	.LC2:
  16 0016 4865 6C6C 		.string	"Hello Jenn!"
  16      6F20 4A65 
  16      6E6E 2100 
  17               		.section	.text.startup,"ax",@progbits
  18               	.global	main
  20               	main:
  21               	.LFB11:
  22               		.file 1 "main.c"
   1:main.c        **** #ifndef F_CPU
   2:main.c        **** #define F_CPU 16000000UL
   3:main.c        **** #endif
   4:main.c        **** #define RESPONSEBUFFER 50
   5:main.c        **** #include <stdlib.h>
   6:main.c        **** #include <avr/io.h>
   7:main.c        **** #include <stdio.h>
   8:main.c        **** #include <util/delay.h>
   9:main.c        **** #include <string.h>
  10:main.c        **** #include "main.h"
  11:main.c        **** #include "uart.h"
  12:main.c        **** #include "lcd.h"
  13:main.c        **** 
  14:main.c        **** // Program ID
  15:main.c        **** uint8_t program_author[]   = "  Aldanis Vigo  ";
  16:main.c        **** uint8_t machine_name[]     = " Exposure Unit  ";
  17:main.c        **** uint8_t program_version[]  = "  Version 1.0   ";
  18:main.c        **** uint8_t program_date[]     = "  Oct 31, 2015  ";
  19:main.c        **** 
  20:main.c        **** int main( void ){	
  23               		.loc 1 20 0
  24               		.cfi_startproc
  25               	/* prologue: function */
  26               	/* frame size = 0 */
  27               	/* stack size = 0 */
  28               	.L__stack_usage = 0
  21:main.c        ****     	set_lcd_pins_direction();
  29               		.loc 1 21 0
  30 0000 0E94 0000 		call set_lcd_pins_direction
  31               	.LVL0:
  22:main.c        **** 	lcd_init();
  32               		.loc 1 22 0
  33 0004 0E94 0000 		call lcd_init
  34               	.LVL1:
  23:main.c        ****     	lcd_puts( program_author );
  35               		.loc 1 23 0
  36 0008 80E0      		ldi r24,lo8(program_author)
  37 000a 90E0      		ldi r25,hi8(program_author)
  38 000c 0E94 0000 		call lcd_puts
  39               	.LVL2:
  40               	.LBB8:
  41               	.LBB9:
  42               		.file 2 "/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h"
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
  43               		.loc 2 163 0
  44 0010 2FEF      		ldi r18,lo8(6399999)
  45 0012 87EA      		ldi r24,hi8(6399999)
  46 0014 91E6      		ldi r25,hlo8(6399999)
  47 0016 2150      		1: subi r18,1
  48 0018 8040      		sbci r24,0
  49 001a 9040      		sbci r25,0
  50 001c 01F4      		brne 1b
  51 001e 00C0      		rjmp .
  52 0020 0000      		nop
  53               	.LBE9:
  54               	.LBE8:
  24:main.c        ****     	_delay_ms(2000);
  25:main.c        ****     	lcd_check_busy_flag();
  55               		.loc 1 25 0
  56 0022 0E94 0000 		call lcd_check_busy_flag
  57               	.LVL3:
  26:main.c        ****     	lcd_send_command( LCD_CLEAR );
  58               		.loc 1 26 0
  59 0026 81E0      		ldi r24,lo8(1)
  60 0028 0E94 0000 		call lcd_send_command
  61               	.LVL4:
  27:main.c        ****     	lcd_puts( machine_name );
  62               		.loc 1 27 0
  63 002c 80E0      		ldi r24,lo8(machine_name)
  64 002e 90E0      		ldi r25,hi8(machine_name)
  65 0030 0E94 0000 		call lcd_puts
  66               	.LVL5:
  28:main.c        ****     	lcd_check_busy_flag();
  67               		.loc 1 28 0
  68 0034 0E94 0000 		call lcd_check_busy_flag
  69               	.LVL6:
  29:main.c        ****     	lcd_send_command( LCD_SET_CURSOR_POS | LCD_SECOND_LINE );
  70               		.loc 1 29 0
  71 0038 80EC      		ldi r24,lo8(-64)
  72 003a 0E94 0000 		call lcd_send_command
  73               	.LVL7:
  30:main.c        ****     	lcd_puts( program_version );
  74               		.loc 1 30 0
  75 003e 80E0      		ldi r24,lo8(program_version)
  76 0040 90E0      		ldi r25,hi8(program_version)
  77 0042 0E94 0000 		call lcd_puts
  78               	.LVL8:
  79               	.LBB10:
  80               	.LBB11:
  81               		.loc 2 163 0
  82 0046 2FEF      		ldi r18,lo8(15999999)
  83 0048 83E2      		ldi r24,hi8(15999999)
  84 004a 94EF      		ldi r25,hlo8(15999999)
  85 004c 2150      		1: subi r18,1
  86 004e 8040      		sbci r24,0
  87 0050 9040      		sbci r25,0
  88 0052 01F4      		brne 1b
  89 0054 00C0      		rjmp .
  90 0056 0000      		nop
  91               	.LBE11:
  92               	.LBE10:
  31:main.c        ****    	_delay_ms( 5000 );
  32:main.c        ****     	lcd_check_busy_flag();
  93               		.loc 1 32 0
  94 0058 0E94 0000 		call lcd_check_busy_flag
  95               	.LVL9:
  33:main.c        ****     	lcd_send_command( LCD_CLEAR );
  96               		.loc 1 33 0
  97 005c 81E0      		ldi r24,lo8(1)
  98 005e 0E94 0000 		call lcd_send_command
  99               	.LVL10:
  34:main.c        ****     	//You can multiplex these pins by enabling and disabling the LCD display.
  35:main.c        ****     	lcd_puts( "Lx = 15uH " );
 100               		.loc 1 35 0
 101 0062 80E0      		ldi r24,lo8(.LC0)
 102 0064 90E0      		ldi r25,hi8(.LC0)
 103 0066 0E94 0000 		call lcd_puts
 104               	.LVL11:
  36:main.c        ****     	lcd_check_busy_flag();
 105               		.loc 1 36 0
 106 006a 0E94 0000 		call lcd_check_busy_flag
 107               	.LVL12:
  37:main.c        ****     	lcd_send_command( LCD_SET_CURSOR_POS | LCD_SECOND_LINE );
 108               		.loc 1 37 0
 109 006e 80EC      		ldi r24,lo8(-64)
 110 0070 0E94 0000 		call lcd_send_command
 111               	.LVL13:
  38:main.c        ****     	lcd_puts( "Cx = 150uF" );
 112               		.loc 1 38 0
 113 0074 80E0      		ldi r24,lo8(.LC1)
 114 0076 90E0      		ldi r25,hi8(.LC1)
 115 0078 0E94 0000 		call lcd_puts
 116               	.LVL14:
  39:main.c        ****     	lcd_check_busy_flag();
 117               		.loc 1 39 0
 118 007c 0E94 0000 		call lcd_check_busy_flag
 119               	.LVL15:
 120               	.LBB12:
 121               	.LBB13:
 122               		.loc 2 163 0
 123 0080 2FEF      		ldi r18,lo8(6399999)
 124 0082 87EA      		ldi r24,hi8(6399999)
 125 0084 91E6      		ldi r25,hlo8(6399999)
 126 0086 2150      		1: subi r18,1
 127 0088 8040      		sbci r24,0
 128 008a 9040      		sbci r25,0
 129 008c 01F4      		brne 1b
 130 008e 00C0      		rjmp .
 131 0090 0000      		nop
 132               	.LBE13:
 133               	.LBE12:
  40:main.c        **** 	_delay_ms(2000);
  41:main.c        **** 	lcd_send_command( LCD_CLEAR );
 134               		.loc 1 41 0
 135 0092 81E0      		ldi r24,lo8(1)
 136 0094 0E94 0000 		call lcd_send_command
 137               	.LVL16:
  42:main.c        **** 	lcd_puts("Hello Jenn!");
 138               		.loc 1 42 0
 139 0098 80E0      		ldi r24,lo8(.LC2)
 140 009a 90E0      		ldi r25,hi8(.LC2)
 141 009c 0E94 0000 		call lcd_puts
 142               	.LVL17:
 143               	.L2:
 144 00a0 00C0      		rjmp .L2
 145               		.cfi_endproc
 146               	.LFE11:
 148               	.global	program_date
 149               		.data
 152               	program_date:
 153 0000 2020 4F63 		.string	"  Oct 31, 2015  "
 153      7420 3331 
 153      2C20 3230 
 153      3135 2020 
 153      00
 154               	.global	program_version
 157               	program_version:
 158 0011 2020 5665 		.string	"  Version 1.0   "
 158      7273 696F 
 158      6E20 312E 
 158      3020 2020 
 158      00
 159               	.global	machine_name
 162               	machine_name:
 163 0022 2045 7870 		.string	" Exposure Unit  "
 163      6F73 7572 
 163      6520 556E 
 163      6974 2020 
 163      00
 164               	.global	program_author
 167               	program_author:
 168 0033 2020 416C 		.string	"  Aldanis Vigo  "
 168      6461 6E69 
 168      7320 5669 
 168      676F 2020 
 168      00
 169               		.text
 170               	.Letext0:
 171               		.file 3 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 172               		.file 4 "lcd.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cciXmVQP.s:2      *ABS*:0000003e __SP_H__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cciXmVQP.s:3      *ABS*:0000003d __SP_L__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cciXmVQP.s:4      *ABS*:0000003f __SREG__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cciXmVQP.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cciXmVQP.s:6      *ABS*:00000001 __zero_reg__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cciXmVQP.s:20     .text.startup:00000000 main
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cciXmVQP.s:167    .data:00000033 program_author
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cciXmVQP.s:162    .data:00000022 machine_name
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cciXmVQP.s:157    .data:00000011 program_version
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cciXmVQP.s:152    .data:00000000 program_date

UNDEFINED SYMBOLS
set_lcd_pins_direction
lcd_init
lcd_puts
lcd_check_busy_flag
lcd_send_command
__do_copy_data
