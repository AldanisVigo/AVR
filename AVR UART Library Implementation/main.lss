
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  000007f2  00000886  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800152  00800152  000008d8  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000008d8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  000008f0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008a7  00000000  00000000  000009d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000340  00000000  00000000  0000127f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000034c  00000000  00000000  000015bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d0  00000000  00000000  0000190c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001b2  00000000  00000000  000019dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001ec  00000000  00000000  00001b8e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001d7a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ef       	ldi	r30, 0xF2	; 242
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 35       	cpi	r26, 0x52	; 82
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e5       	ldi	r26, 0x52	; 82
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 35       	cpi	r26, 0x58	; 88
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b7 00 	call	0x16e	; 0x16e <main>
  9e:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <receiveWord>:
#include <util/delay.h>
#include <string.h>
#include "main.h"
#include "uart.h"

unsigned char receiveWord(const uint16_t length,unsigned char * response){
  a6:	af 92       	push	r10
  a8:	bf 92       	push	r11
  aa:	cf 92       	push	r12
  ac:	df 92       	push	r13
  ae:	ef 92       	push	r14
  b0:	ff 92       	push	r15
  b2:	0f 93       	push	r16
  b4:	1f 93       	push	r17
  b6:	cf 93       	push	r28
  b8:	df 93       	push	r29
  ba:	6c 01       	movw	r12, r24
  bc:	7b 01       	movw	r14, r22
    uint16_t index = 0;
    if(length == 0) return 0;
  be:	00 97       	sbiw	r24, 0x00	; 0
  c0:	29 f1       	breq	.+74     	; 0x10c <receiveWord+0x66>
  c2:	8b 01       	movw	r16, r22
  c4:	c0 e0       	ldi	r28, 0x00	; 0
  c6:	d0 e0       	ldi	r29, 0x00	; 0
    
    for(index = 0;index < length;index++){
        response[index] = getchar();
  c8:	58 01       	movw	r10, r16
  ca:	80 91 52 01 	lds	r24, 0x0152
  ce:	90 91 53 01 	lds	r25, 0x0153
  d2:	0e 94 f6 00 	call	0x1ec	; 0x1ec <fgetc>
  d6:	f8 01       	movw	r30, r16
  d8:	81 93       	st	Z+, r24
  da:	8f 01       	movw	r16, r30
        switch (response[index]){
  dc:	8a 30       	cpi	r24, 0x0A	; 10
  de:	11 f0       	breq	.+4      	; 0xe4 <receiveWord+0x3e>
  e0:	8d 30       	cpi	r24, 0x0D	; 13
  e2:	11 f4       	brne	.+4      	; 0xe8 <receiveWord+0x42>
            case '\r':
            case '\n':
                response[index] = '\0';
  e4:	f5 01       	movw	r30, r10
  e6:	0e c0       	rjmp	.+28     	; 0x104 <receiveWord+0x5e>
                return index + 1;
            default:
                putchar(response[index]);
  e8:	60 91 54 01 	lds	r22, 0x0154
  ec:	70 91 55 01 	lds	r23, 0x0155
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	0e 94 34 01 	call	0x268	; 0x268 <fputc>

unsigned char receiveWord(const uint16_t length,unsigned char * response){
    uint16_t index = 0;
    if(length == 0) return 0;
    
    for(index = 0;index < length;index++){
  f6:	21 96       	adiw	r28, 0x01	; 1
  f8:	cc 15       	cp	r28, r12
  fa:	dd 05       	cpc	r29, r13
  fc:	29 f7       	brne	.-54     	; 0xc8 <receiveWord+0x22>
            default:
                putchar(response[index]);
                break;
        }
    }
    response[index] = '\0';
  fe:	f7 01       	movw	r30, r14
 100:	ec 0f       	add	r30, r28
 102:	fd 1f       	adc	r31, r29
 104:	10 82       	st	Z, r1
    return index + 1;
 106:	8c 2f       	mov	r24, r28
 108:	8f 5f       	subi	r24, 0xFF	; 255
 10a:	01 c0       	rjmp	.+2      	; 0x10e <receiveWord+0x68>
#include "main.h"
#include "uart.h"

unsigned char receiveWord(const uint16_t length,unsigned char * response){
    uint16_t index = 0;
    if(length == 0) return 0;
 10c:	80 e0       	ldi	r24, 0x00	; 0
                break;
        }
    }
    response[index] = '\0';
    return index + 1;
}
 10e:	df 91       	pop	r29
 110:	cf 91       	pop	r28
 112:	1f 91       	pop	r17
 114:	0f 91       	pop	r16
 116:	ff 90       	pop	r15
 118:	ef 90       	pop	r14
 11a:	df 90       	pop	r13
 11c:	cf 90       	pop	r12
 11e:	bf 90       	pop	r11
 120:	af 90       	pop	r10
 122:	08 95       	ret

00000124 <uart_putchar>:
 * Sends a character through the transmitter interface.
 *
 * @param (char) c, (FILE *) stream
 * @return (int) 1
 */
int uart_putchar(char c, FILE *stream) {
 124:	cf 93       	push	r28
 126:	c8 2f       	mov	r28, r24
    if (c == '\n') {
 128:	8a 30       	cpi	r24, 0x0A	; 10
 12a:	19 f4       	brne	.+6      	; 0x132 <uart_putchar+0xe>
        uart_putchar('\r', stream);
 12c:	8d e0       	ldi	r24, 0x0D	; 13
 12e:	0e 94 92 00 	call	0x124	; 0x124 <uart_putchar>
    }
    loop_until_bit_is_set(UCSR0A, UDRE0);
 132:	80 91 c0 00 	lds	r24, 0x00C0
 136:	85 ff       	sbrs	r24, 5
 138:	fc cf       	rjmp	.-8      	; 0x132 <uart_putchar+0xe>
    UDR0 = c;
 13a:	c0 93 c6 00 	sts	0x00C6, r28
    return 0;
}
 13e:	80 e0       	ldi	r24, 0x00	; 0
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	cf 91       	pop	r28
 144:	08 95       	ret

00000146 <uart_getchar>:

int uart_getchar(FILE *stream) {
    loop_until_bit_is_set(UCSR0A, RXC0);
 146:	80 91 c0 00 	lds	r24, 0x00C0
 14a:	87 ff       	sbrs	r24, 7
 14c:	fc cf       	rjmp	.-8      	; 0x146 <uart_getchar>
    return UDR0;
 14e:	80 91 c6 00 	lds	r24, 0x00C6
}
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	08 95       	ret

00000156 <uart_init>:
 *
 * @param (void)
 * @return (void)
 */
void uart_init(void) {
    UBRR0H = UBRRH_VALUE;
 156:	10 92 c5 00 	sts	0x00C5, r1
    UBRR0L = UBRRL_VALUE;
 15a:	87 e6       	ldi	r24, 0x67	; 103
 15c:	80 93 c4 00 	sts	0x00C4, r24

    UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
 160:	86 e0       	ldi	r24, 0x06	; 6
 162:	80 93 c2 00 	sts	0x00C2, r24
    UCSR0B = _BV(RXEN0) | _BV(TXEN0);
 166:	88 e1       	ldi	r24, 0x18	; 24
 168:	80 93 c1 00 	sts	0x00C1, r24
 16c:	08 95       	ret

0000016e <main>:

#define RESPONSEBUFFER 50
int main(void) {
 16e:	cf 93       	push	r28
 170:	df 93       	push	r29
 172:	cd b7       	in	r28, 0x3d	; 61
 174:	de b7       	in	r29, 0x3e	; 62
 176:	e2 97       	sbiw	r28, 0x32	; 50
 178:	0f b6       	in	r0, 0x3f	; 63
 17a:	f8 94       	cli
 17c:	de bf       	out	0x3e, r29	; 62
 17e:	0f be       	out	0x3f, r0	; 63
 180:	cd bf       	out	0x3d, r28	; 61
    uart_init();
 182:	0e 94 ab 00 	call	0x156	; 0x156 <uart_init>
    stdout = &uart_tx;
 186:	8e e0       	ldi	r24, 0x0E	; 14
 188:	91 e0       	ldi	r25, 0x01	; 1
 18a:	90 93 55 01 	sts	0x0155, r25
 18e:	80 93 54 01 	sts	0x0154, r24
    stdin  = &uart_rx;
 192:	80 e0       	ldi	r24, 0x00	; 0
 194:	91 e0       	ldi	r25, 0x01	; 1
 196:	90 93 53 01 	sts	0x0153, r25
 19a:	80 93 52 01 	sts	0x0152, r24
    DDRB = 0; //Make output pin
 19e:	14 b8       	out	0x04, r1	; 4
    char uart_response[RESPONSEBUFFER];
    while (1) {
        //To write to UART use printf
	uart_putchar('c',&uart_tx);
        printf("Please enter your last name:");
 1a0:	8c e1       	ldi	r24, 0x1C	; 28
 1a2:	c8 2e       	mov	r12, r24
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	d8 2e       	mov	r13, r24
        receiveWord(RESPONSEBUFFER,&uart_response);
 1a8:	8e 01       	movw	r16, r28
 1aa:	0f 5f       	subi	r16, 0xFF	; 255
 1ac:	1f 4f       	sbci	r17, 0xFF	; 255
        printf("\n\n\nYou responded:\n %s\n\n\n",uart_response);
 1ae:	99 e3       	ldi	r25, 0x39	; 57
 1b0:	e9 2e       	mov	r14, r25
 1b2:	91 e0       	ldi	r25, 0x01	; 1
 1b4:	f9 2e       	mov	r15, r25
    stdin  = &uart_rx;
    DDRB = 0; //Make output pin
    char uart_response[RESPONSEBUFFER];
    while (1) {
        //To write to UART use printf
	uart_putchar('c',&uart_tx);
 1b6:	6e e0       	ldi	r22, 0x0E	; 14
 1b8:	71 e0       	ldi	r23, 0x01	; 1
 1ba:	83 e6       	ldi	r24, 0x63	; 99
 1bc:	0e 94 92 00 	call	0x124	; 0x124 <uart_putchar>
        printf("Please enter your last name:");
 1c0:	df 92       	push	r13
 1c2:	cf 92       	push	r12
 1c4:	0e 94 66 01 	call	0x2cc	; 0x2cc <printf>
        receiveWord(RESPONSEBUFFER,&uart_response);
 1c8:	b8 01       	movw	r22, r16
 1ca:	82 e3       	ldi	r24, 0x32	; 50
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	0e 94 53 00 	call	0xa6	; 0xa6 <receiveWord>
        printf("\n\n\nYou responded:\n %s\n\n\n",uart_response);
 1d2:	1f 93       	push	r17
 1d4:	0f 93       	push	r16
 1d6:	ff 92       	push	r15
 1d8:	ef 92       	push	r14
 1da:	0e 94 66 01 	call	0x2cc	; 0x2cc <printf>
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	e5 cf       	rjmp	.-54     	; 0x1b6 <main+0x48>

000001ec <fgetc>:
 1ec:	cf 93       	push	r28
 1ee:	df 93       	push	r29
 1f0:	ec 01       	movw	r28, r24
 1f2:	2b 81       	ldd	r18, Y+3	; 0x03
 1f4:	20 ff       	sbrs	r18, 0
 1f6:	33 c0       	rjmp	.+102    	; 0x25e <fgetc+0x72>
 1f8:	26 ff       	sbrs	r18, 6
 1fa:	0a c0       	rjmp	.+20     	; 0x210 <fgetc+0x24>
 1fc:	2f 7b       	andi	r18, 0xBF	; 191
 1fe:	2b 83       	std	Y+3, r18	; 0x03
 200:	8e 81       	ldd	r24, Y+6	; 0x06
 202:	9f 81       	ldd	r25, Y+7	; 0x07
 204:	01 96       	adiw	r24, 0x01	; 1
 206:	9f 83       	std	Y+7, r25	; 0x07
 208:	8e 83       	std	Y+6, r24	; 0x06
 20a:	8a 81       	ldd	r24, Y+2	; 0x02
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	29 c0       	rjmp	.+82     	; 0x262 <fgetc+0x76>
 210:	22 ff       	sbrs	r18, 2
 212:	0f c0       	rjmp	.+30     	; 0x232 <fgetc+0x46>
 214:	e8 81       	ld	r30, Y
 216:	f9 81       	ldd	r31, Y+1	; 0x01
 218:	80 81       	ld	r24, Z
 21a:	99 27       	eor	r25, r25
 21c:	87 fd       	sbrc	r24, 7
 21e:	90 95       	com	r25
 220:	00 97       	sbiw	r24, 0x00	; 0
 222:	19 f4       	brne	.+6      	; 0x22a <fgetc+0x3e>
 224:	20 62       	ori	r18, 0x20	; 32
 226:	2b 83       	std	Y+3, r18	; 0x03
 228:	1a c0       	rjmp	.+52     	; 0x25e <fgetc+0x72>
 22a:	31 96       	adiw	r30, 0x01	; 1
 22c:	f9 83       	std	Y+1, r31	; 0x01
 22e:	e8 83       	st	Y, r30
 230:	0e c0       	rjmp	.+28     	; 0x24e <fgetc+0x62>
 232:	ea 85       	ldd	r30, Y+10	; 0x0a
 234:	fb 85       	ldd	r31, Y+11	; 0x0b
 236:	09 95       	icall
 238:	97 ff       	sbrs	r25, 7
 23a:	09 c0       	rjmp	.+18     	; 0x24e <fgetc+0x62>
 23c:	2b 81       	ldd	r18, Y+3	; 0x03
 23e:	01 96       	adiw	r24, 0x01	; 1
 240:	11 f4       	brne	.+4      	; 0x246 <fgetc+0x5a>
 242:	80 e1       	ldi	r24, 0x10	; 16
 244:	01 c0       	rjmp	.+2      	; 0x248 <fgetc+0x5c>
 246:	80 e2       	ldi	r24, 0x20	; 32
 248:	82 2b       	or	r24, r18
 24a:	8b 83       	std	Y+3, r24	; 0x03
 24c:	08 c0       	rjmp	.+16     	; 0x25e <fgetc+0x72>
 24e:	2e 81       	ldd	r18, Y+6	; 0x06
 250:	3f 81       	ldd	r19, Y+7	; 0x07
 252:	2f 5f       	subi	r18, 0xFF	; 255
 254:	3f 4f       	sbci	r19, 0xFF	; 255
 256:	3f 83       	std	Y+7, r19	; 0x07
 258:	2e 83       	std	Y+6, r18	; 0x06
 25a:	99 27       	eor	r25, r25
 25c:	02 c0       	rjmp	.+4      	; 0x262 <fgetc+0x76>
 25e:	8f ef       	ldi	r24, 0xFF	; 255
 260:	9f ef       	ldi	r25, 0xFF	; 255
 262:	df 91       	pop	r29
 264:	cf 91       	pop	r28
 266:	08 95       	ret

00000268 <fputc>:
 268:	0f 93       	push	r16
 26a:	1f 93       	push	r17
 26c:	cf 93       	push	r28
 26e:	df 93       	push	r29
 270:	18 2f       	mov	r17, r24
 272:	09 2f       	mov	r16, r25
 274:	eb 01       	movw	r28, r22
 276:	8b 81       	ldd	r24, Y+3	; 0x03
 278:	81 fd       	sbrc	r24, 1
 27a:	03 c0       	rjmp	.+6      	; 0x282 <fputc+0x1a>
 27c:	8f ef       	ldi	r24, 0xFF	; 255
 27e:	9f ef       	ldi	r25, 0xFF	; 255
 280:	20 c0       	rjmp	.+64     	; 0x2c2 <fputc+0x5a>
 282:	82 ff       	sbrs	r24, 2
 284:	10 c0       	rjmp	.+32     	; 0x2a6 <fputc+0x3e>
 286:	4e 81       	ldd	r20, Y+6	; 0x06
 288:	5f 81       	ldd	r21, Y+7	; 0x07
 28a:	2c 81       	ldd	r18, Y+4	; 0x04
 28c:	3d 81       	ldd	r19, Y+5	; 0x05
 28e:	42 17       	cp	r20, r18
 290:	53 07       	cpc	r21, r19
 292:	7c f4       	brge	.+30     	; 0x2b2 <fputc+0x4a>
 294:	e8 81       	ld	r30, Y
 296:	f9 81       	ldd	r31, Y+1	; 0x01
 298:	9f 01       	movw	r18, r30
 29a:	2f 5f       	subi	r18, 0xFF	; 255
 29c:	3f 4f       	sbci	r19, 0xFF	; 255
 29e:	39 83       	std	Y+1, r19	; 0x01
 2a0:	28 83       	st	Y, r18
 2a2:	10 83       	st	Z, r17
 2a4:	06 c0       	rjmp	.+12     	; 0x2b2 <fputc+0x4a>
 2a6:	e8 85       	ldd	r30, Y+8	; 0x08
 2a8:	f9 85       	ldd	r31, Y+9	; 0x09
 2aa:	81 2f       	mov	r24, r17
 2ac:	09 95       	icall
 2ae:	89 2b       	or	r24, r25
 2b0:	29 f7       	brne	.-54     	; 0x27c <fputc+0x14>
 2b2:	2e 81       	ldd	r18, Y+6	; 0x06
 2b4:	3f 81       	ldd	r19, Y+7	; 0x07
 2b6:	2f 5f       	subi	r18, 0xFF	; 255
 2b8:	3f 4f       	sbci	r19, 0xFF	; 255
 2ba:	3f 83       	std	Y+7, r19	; 0x07
 2bc:	2e 83       	std	Y+6, r18	; 0x06
 2be:	81 2f       	mov	r24, r17
 2c0:	90 2f       	mov	r25, r16
 2c2:	df 91       	pop	r29
 2c4:	cf 91       	pop	r28
 2c6:	1f 91       	pop	r17
 2c8:	0f 91       	pop	r16
 2ca:	08 95       	ret

000002cc <printf>:
 2cc:	a0 e0       	ldi	r26, 0x00	; 0
 2ce:	b0 e0       	ldi	r27, 0x00	; 0
 2d0:	ec e6       	ldi	r30, 0x6C	; 108
 2d2:	f1 e0       	ldi	r31, 0x01	; 1
 2d4:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__prologue_saves__+0x20>
 2d8:	fe 01       	movw	r30, r28
 2da:	35 96       	adiw	r30, 0x05	; 5
 2dc:	61 91       	ld	r22, Z+
 2de:	71 91       	ld	r23, Z+
 2e0:	af 01       	movw	r20, r30
 2e2:	80 91 54 01 	lds	r24, 0x0154
 2e6:	90 91 55 01 	lds	r25, 0x0155
 2ea:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <vfprintf>
 2ee:	e2 e0       	ldi	r30, 0x02	; 2
 2f0:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__epilogue_restores__+0x20>

000002f4 <vfprintf>:
 2f4:	ac e0       	ldi	r26, 0x0C	; 12
 2f6:	b0 e0       	ldi	r27, 0x00	; 0
 2f8:	e0 e8       	ldi	r30, 0x80	; 128
 2fa:	f1 e0       	ldi	r31, 0x01	; 1
 2fc:	0c 94 c0 03 	jmp	0x780	; 0x780 <__prologue_saves__>
 300:	7c 01       	movw	r14, r24
 302:	6b 01       	movw	r12, r22
 304:	8a 01       	movw	r16, r20
 306:	fc 01       	movw	r30, r24
 308:	17 82       	std	Z+7, r1	; 0x07
 30a:	16 82       	std	Z+6, r1	; 0x06
 30c:	83 81       	ldd	r24, Z+3	; 0x03
 30e:	81 ff       	sbrs	r24, 1
 310:	bd c1       	rjmp	.+890    	; 0x68c <__stack+0x18d>
 312:	ce 01       	movw	r24, r28
 314:	01 96       	adiw	r24, 0x01	; 1
 316:	4c 01       	movw	r8, r24
 318:	f7 01       	movw	r30, r14
 31a:	93 81       	ldd	r25, Z+3	; 0x03
 31c:	f6 01       	movw	r30, r12
 31e:	93 fd       	sbrc	r25, 3
 320:	85 91       	lpm	r24, Z+
 322:	93 ff       	sbrs	r25, 3
 324:	81 91       	ld	r24, Z+
 326:	6f 01       	movw	r12, r30
 328:	88 23       	and	r24, r24
 32a:	09 f4       	brne	.+2      	; 0x32e <vfprintf+0x3a>
 32c:	ab c1       	rjmp	.+854    	; 0x684 <__stack+0x185>
 32e:	85 32       	cpi	r24, 0x25	; 37
 330:	39 f4       	brne	.+14     	; 0x340 <vfprintf+0x4c>
 332:	93 fd       	sbrc	r25, 3
 334:	85 91       	lpm	r24, Z+
 336:	93 ff       	sbrs	r25, 3
 338:	81 91       	ld	r24, Z+
 33a:	6f 01       	movw	r12, r30
 33c:	85 32       	cpi	r24, 0x25	; 37
 33e:	29 f4       	brne	.+10     	; 0x34a <vfprintf+0x56>
 340:	b7 01       	movw	r22, r14
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	0e 94 34 01 	call	0x268	; 0x268 <fputc>
 348:	e7 cf       	rjmp	.-50     	; 0x318 <vfprintf+0x24>
 34a:	51 2c       	mov	r5, r1
 34c:	31 2c       	mov	r3, r1
 34e:	20 e0       	ldi	r18, 0x00	; 0
 350:	20 32       	cpi	r18, 0x20	; 32
 352:	a0 f4       	brcc	.+40     	; 0x37c <vfprintf+0x88>
 354:	8b 32       	cpi	r24, 0x2B	; 43
 356:	69 f0       	breq	.+26     	; 0x372 <vfprintf+0x7e>
 358:	30 f4       	brcc	.+12     	; 0x366 <vfprintf+0x72>
 35a:	80 32       	cpi	r24, 0x20	; 32
 35c:	59 f0       	breq	.+22     	; 0x374 <vfprintf+0x80>
 35e:	83 32       	cpi	r24, 0x23	; 35
 360:	69 f4       	brne	.+26     	; 0x37c <vfprintf+0x88>
 362:	20 61       	ori	r18, 0x10	; 16
 364:	2c c0       	rjmp	.+88     	; 0x3be <vfprintf+0xca>
 366:	8d 32       	cpi	r24, 0x2D	; 45
 368:	39 f0       	breq	.+14     	; 0x378 <vfprintf+0x84>
 36a:	80 33       	cpi	r24, 0x30	; 48
 36c:	39 f4       	brne	.+14     	; 0x37c <vfprintf+0x88>
 36e:	21 60       	ori	r18, 0x01	; 1
 370:	26 c0       	rjmp	.+76     	; 0x3be <vfprintf+0xca>
 372:	22 60       	ori	r18, 0x02	; 2
 374:	24 60       	ori	r18, 0x04	; 4
 376:	23 c0       	rjmp	.+70     	; 0x3be <vfprintf+0xca>
 378:	28 60       	ori	r18, 0x08	; 8
 37a:	21 c0       	rjmp	.+66     	; 0x3be <vfprintf+0xca>
 37c:	27 fd       	sbrc	r18, 7
 37e:	27 c0       	rjmp	.+78     	; 0x3ce <vfprintf+0xda>
 380:	30 ed       	ldi	r19, 0xD0	; 208
 382:	38 0f       	add	r19, r24
 384:	3a 30       	cpi	r19, 0x0A	; 10
 386:	78 f4       	brcc	.+30     	; 0x3a6 <vfprintf+0xb2>
 388:	26 ff       	sbrs	r18, 6
 38a:	06 c0       	rjmp	.+12     	; 0x398 <vfprintf+0xa4>
 38c:	fa e0       	ldi	r31, 0x0A	; 10
 38e:	5f 9e       	mul	r5, r31
 390:	30 0d       	add	r19, r0
 392:	11 24       	eor	r1, r1
 394:	53 2e       	mov	r5, r19
 396:	13 c0       	rjmp	.+38     	; 0x3be <vfprintf+0xca>
 398:	8a e0       	ldi	r24, 0x0A	; 10
 39a:	38 9e       	mul	r3, r24
 39c:	30 0d       	add	r19, r0
 39e:	11 24       	eor	r1, r1
 3a0:	33 2e       	mov	r3, r19
 3a2:	20 62       	ori	r18, 0x20	; 32
 3a4:	0c c0       	rjmp	.+24     	; 0x3be <vfprintf+0xca>
 3a6:	8e 32       	cpi	r24, 0x2E	; 46
 3a8:	21 f4       	brne	.+8      	; 0x3b2 <vfprintf+0xbe>
 3aa:	26 fd       	sbrc	r18, 6
 3ac:	6b c1       	rjmp	.+726    	; 0x684 <__stack+0x185>
 3ae:	20 64       	ori	r18, 0x40	; 64
 3b0:	06 c0       	rjmp	.+12     	; 0x3be <vfprintf+0xca>
 3b2:	8c 36       	cpi	r24, 0x6C	; 108
 3b4:	11 f4       	brne	.+4      	; 0x3ba <vfprintf+0xc6>
 3b6:	20 68       	ori	r18, 0x80	; 128
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <vfprintf+0xca>
 3ba:	88 36       	cpi	r24, 0x68	; 104
 3bc:	41 f4       	brne	.+16     	; 0x3ce <vfprintf+0xda>
 3be:	f6 01       	movw	r30, r12
 3c0:	93 fd       	sbrc	r25, 3
 3c2:	85 91       	lpm	r24, Z+
 3c4:	93 ff       	sbrs	r25, 3
 3c6:	81 91       	ld	r24, Z+
 3c8:	6f 01       	movw	r12, r30
 3ca:	81 11       	cpse	r24, r1
 3cc:	c1 cf       	rjmp	.-126    	; 0x350 <vfprintf+0x5c>
 3ce:	98 2f       	mov	r25, r24
 3d0:	9f 7d       	andi	r25, 0xDF	; 223
 3d2:	95 54       	subi	r25, 0x45	; 69
 3d4:	93 30       	cpi	r25, 0x03	; 3
 3d6:	28 f4       	brcc	.+10     	; 0x3e2 <vfprintf+0xee>
 3d8:	0c 5f       	subi	r16, 0xFC	; 252
 3da:	1f 4f       	sbci	r17, 0xFF	; 255
 3dc:	ff e3       	ldi	r31, 0x3F	; 63
 3de:	f9 83       	std	Y+1, r31	; 0x01
 3e0:	0d c0       	rjmp	.+26     	; 0x3fc <vfprintf+0x108>
 3e2:	83 36       	cpi	r24, 0x63	; 99
 3e4:	31 f0       	breq	.+12     	; 0x3f2 <vfprintf+0xfe>
 3e6:	83 37       	cpi	r24, 0x73	; 115
 3e8:	71 f0       	breq	.+28     	; 0x406 <vfprintf+0x112>
 3ea:	83 35       	cpi	r24, 0x53	; 83
 3ec:	09 f0       	breq	.+2      	; 0x3f0 <vfprintf+0xfc>
 3ee:	5b c0       	rjmp	.+182    	; 0x4a6 <vfprintf+0x1b2>
 3f0:	22 c0       	rjmp	.+68     	; 0x436 <vfprintf+0x142>
 3f2:	f8 01       	movw	r30, r16
 3f4:	80 81       	ld	r24, Z
 3f6:	89 83       	std	Y+1, r24	; 0x01
 3f8:	0e 5f       	subi	r16, 0xFE	; 254
 3fa:	1f 4f       	sbci	r17, 0xFF	; 255
 3fc:	44 24       	eor	r4, r4
 3fe:	43 94       	inc	r4
 400:	51 2c       	mov	r5, r1
 402:	54 01       	movw	r10, r8
 404:	15 c0       	rjmp	.+42     	; 0x430 <vfprintf+0x13c>
 406:	38 01       	movw	r6, r16
 408:	f2 e0       	ldi	r31, 0x02	; 2
 40a:	6f 0e       	add	r6, r31
 40c:	71 1c       	adc	r7, r1
 40e:	f8 01       	movw	r30, r16
 410:	a0 80       	ld	r10, Z
 412:	b1 80       	ldd	r11, Z+1	; 0x01
 414:	26 ff       	sbrs	r18, 6
 416:	03 c0       	rjmp	.+6      	; 0x41e <vfprintf+0x12a>
 418:	65 2d       	mov	r22, r5
 41a:	70 e0       	ldi	r23, 0x00	; 0
 41c:	02 c0       	rjmp	.+4      	; 0x422 <vfprintf+0x12e>
 41e:	6f ef       	ldi	r22, 0xFF	; 255
 420:	7f ef       	ldi	r23, 0xFF	; 255
 422:	c5 01       	movw	r24, r10
 424:	2c 87       	std	Y+12, r18	; 0x0c
 426:	0e 94 57 03 	call	0x6ae	; 0x6ae <strnlen>
 42a:	2c 01       	movw	r4, r24
 42c:	83 01       	movw	r16, r6
 42e:	2c 85       	ldd	r18, Y+12	; 0x0c
 430:	2f 77       	andi	r18, 0x7F	; 127
 432:	22 2e       	mov	r2, r18
 434:	17 c0       	rjmp	.+46     	; 0x464 <vfprintf+0x170>
 436:	38 01       	movw	r6, r16
 438:	f2 e0       	ldi	r31, 0x02	; 2
 43a:	6f 0e       	add	r6, r31
 43c:	71 1c       	adc	r7, r1
 43e:	f8 01       	movw	r30, r16
 440:	a0 80       	ld	r10, Z
 442:	b1 80       	ldd	r11, Z+1	; 0x01
 444:	26 ff       	sbrs	r18, 6
 446:	03 c0       	rjmp	.+6      	; 0x44e <vfprintf+0x15a>
 448:	65 2d       	mov	r22, r5
 44a:	70 e0       	ldi	r23, 0x00	; 0
 44c:	02 c0       	rjmp	.+4      	; 0x452 <vfprintf+0x15e>
 44e:	6f ef       	ldi	r22, 0xFF	; 255
 450:	7f ef       	ldi	r23, 0xFF	; 255
 452:	c5 01       	movw	r24, r10
 454:	2c 87       	std	Y+12, r18	; 0x0c
 456:	0e 94 4c 03 	call	0x698	; 0x698 <strnlen_P>
 45a:	2c 01       	movw	r4, r24
 45c:	2c 85       	ldd	r18, Y+12	; 0x0c
 45e:	20 68       	ori	r18, 0x80	; 128
 460:	22 2e       	mov	r2, r18
 462:	83 01       	movw	r16, r6
 464:	23 fc       	sbrc	r2, 3
 466:	1b c0       	rjmp	.+54     	; 0x49e <vfprintf+0x1aa>
 468:	83 2d       	mov	r24, r3
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	48 16       	cp	r4, r24
 46e:	59 06       	cpc	r5, r25
 470:	b0 f4       	brcc	.+44     	; 0x49e <vfprintf+0x1aa>
 472:	b7 01       	movw	r22, r14
 474:	80 e2       	ldi	r24, 0x20	; 32
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	0e 94 34 01 	call	0x268	; 0x268 <fputc>
 47c:	3a 94       	dec	r3
 47e:	f4 cf       	rjmp	.-24     	; 0x468 <vfprintf+0x174>
 480:	f5 01       	movw	r30, r10
 482:	27 fc       	sbrc	r2, 7
 484:	85 91       	lpm	r24, Z+
 486:	27 fe       	sbrs	r2, 7
 488:	81 91       	ld	r24, Z+
 48a:	5f 01       	movw	r10, r30
 48c:	b7 01       	movw	r22, r14
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	0e 94 34 01 	call	0x268	; 0x268 <fputc>
 494:	31 10       	cpse	r3, r1
 496:	3a 94       	dec	r3
 498:	f1 e0       	ldi	r31, 0x01	; 1
 49a:	4f 1a       	sub	r4, r31
 49c:	51 08       	sbc	r5, r1
 49e:	41 14       	cp	r4, r1
 4a0:	51 04       	cpc	r5, r1
 4a2:	71 f7       	brne	.-36     	; 0x480 <vfprintf+0x18c>
 4a4:	e5 c0       	rjmp	.+458    	; 0x670 <__stack+0x171>
 4a6:	84 36       	cpi	r24, 0x64	; 100
 4a8:	11 f0       	breq	.+4      	; 0x4ae <vfprintf+0x1ba>
 4aa:	89 36       	cpi	r24, 0x69	; 105
 4ac:	39 f5       	brne	.+78     	; 0x4fc <vfprintf+0x208>
 4ae:	f8 01       	movw	r30, r16
 4b0:	27 ff       	sbrs	r18, 7
 4b2:	07 c0       	rjmp	.+14     	; 0x4c2 <vfprintf+0x1ce>
 4b4:	60 81       	ld	r22, Z
 4b6:	71 81       	ldd	r23, Z+1	; 0x01
 4b8:	82 81       	ldd	r24, Z+2	; 0x02
 4ba:	93 81       	ldd	r25, Z+3	; 0x03
 4bc:	0c 5f       	subi	r16, 0xFC	; 252
 4be:	1f 4f       	sbci	r17, 0xFF	; 255
 4c0:	08 c0       	rjmp	.+16     	; 0x4d2 <vfprintf+0x1de>
 4c2:	60 81       	ld	r22, Z
 4c4:	71 81       	ldd	r23, Z+1	; 0x01
 4c6:	88 27       	eor	r24, r24
 4c8:	77 fd       	sbrc	r23, 7
 4ca:	80 95       	com	r24
 4cc:	98 2f       	mov	r25, r24
 4ce:	0e 5f       	subi	r16, 0xFE	; 254
 4d0:	1f 4f       	sbci	r17, 0xFF	; 255
 4d2:	2f 76       	andi	r18, 0x6F	; 111
 4d4:	b2 2e       	mov	r11, r18
 4d6:	97 ff       	sbrs	r25, 7
 4d8:	09 c0       	rjmp	.+18     	; 0x4ec <vfprintf+0x1f8>
 4da:	90 95       	com	r25
 4dc:	80 95       	com	r24
 4de:	70 95       	com	r23
 4e0:	61 95       	neg	r22
 4e2:	7f 4f       	sbci	r23, 0xFF	; 255
 4e4:	8f 4f       	sbci	r24, 0xFF	; 255
 4e6:	9f 4f       	sbci	r25, 0xFF	; 255
 4e8:	20 68       	ori	r18, 0x80	; 128
 4ea:	b2 2e       	mov	r11, r18
 4ec:	2a e0       	ldi	r18, 0x0A	; 10
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	a4 01       	movw	r20, r8
 4f2:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__ultoa_invert>
 4f6:	a8 2e       	mov	r10, r24
 4f8:	a8 18       	sub	r10, r8
 4fa:	44 c0       	rjmp	.+136    	; 0x584 <__stack+0x85>
 4fc:	85 37       	cpi	r24, 0x75	; 117
 4fe:	29 f4       	brne	.+10     	; 0x50a <__stack+0xb>
 500:	2f 7e       	andi	r18, 0xEF	; 239
 502:	b2 2e       	mov	r11, r18
 504:	2a e0       	ldi	r18, 0x0A	; 10
 506:	30 e0       	ldi	r19, 0x00	; 0
 508:	25 c0       	rjmp	.+74     	; 0x554 <__stack+0x55>
 50a:	f2 2f       	mov	r31, r18
 50c:	f9 7f       	andi	r31, 0xF9	; 249
 50e:	bf 2e       	mov	r11, r31
 510:	8f 36       	cpi	r24, 0x6F	; 111
 512:	c1 f0       	breq	.+48     	; 0x544 <__stack+0x45>
 514:	18 f4       	brcc	.+6      	; 0x51c <__stack+0x1d>
 516:	88 35       	cpi	r24, 0x58	; 88
 518:	79 f0       	breq	.+30     	; 0x538 <__stack+0x39>
 51a:	b4 c0       	rjmp	.+360    	; 0x684 <__stack+0x185>
 51c:	80 37       	cpi	r24, 0x70	; 112
 51e:	19 f0       	breq	.+6      	; 0x526 <__stack+0x27>
 520:	88 37       	cpi	r24, 0x78	; 120
 522:	21 f0       	breq	.+8      	; 0x52c <__stack+0x2d>
 524:	af c0       	rjmp	.+350    	; 0x684 <__stack+0x185>
 526:	2f 2f       	mov	r18, r31
 528:	20 61       	ori	r18, 0x10	; 16
 52a:	b2 2e       	mov	r11, r18
 52c:	b4 fe       	sbrs	r11, 4
 52e:	0d c0       	rjmp	.+26     	; 0x54a <__stack+0x4b>
 530:	8b 2d       	mov	r24, r11
 532:	84 60       	ori	r24, 0x04	; 4
 534:	b8 2e       	mov	r11, r24
 536:	09 c0       	rjmp	.+18     	; 0x54a <__stack+0x4b>
 538:	24 ff       	sbrs	r18, 4
 53a:	0a c0       	rjmp	.+20     	; 0x550 <__stack+0x51>
 53c:	9f 2f       	mov	r25, r31
 53e:	96 60       	ori	r25, 0x06	; 6
 540:	b9 2e       	mov	r11, r25
 542:	06 c0       	rjmp	.+12     	; 0x550 <__stack+0x51>
 544:	28 e0       	ldi	r18, 0x08	; 8
 546:	30 e0       	ldi	r19, 0x00	; 0
 548:	05 c0       	rjmp	.+10     	; 0x554 <__stack+0x55>
 54a:	20 e1       	ldi	r18, 0x10	; 16
 54c:	30 e0       	ldi	r19, 0x00	; 0
 54e:	02 c0       	rjmp	.+4      	; 0x554 <__stack+0x55>
 550:	20 e1       	ldi	r18, 0x10	; 16
 552:	32 e0       	ldi	r19, 0x02	; 2
 554:	f8 01       	movw	r30, r16
 556:	b7 fe       	sbrs	r11, 7
 558:	07 c0       	rjmp	.+14     	; 0x568 <__stack+0x69>
 55a:	60 81       	ld	r22, Z
 55c:	71 81       	ldd	r23, Z+1	; 0x01
 55e:	82 81       	ldd	r24, Z+2	; 0x02
 560:	93 81       	ldd	r25, Z+3	; 0x03
 562:	0c 5f       	subi	r16, 0xFC	; 252
 564:	1f 4f       	sbci	r17, 0xFF	; 255
 566:	06 c0       	rjmp	.+12     	; 0x574 <__stack+0x75>
 568:	60 81       	ld	r22, Z
 56a:	71 81       	ldd	r23, Z+1	; 0x01
 56c:	80 e0       	ldi	r24, 0x00	; 0
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	0e 5f       	subi	r16, 0xFE	; 254
 572:	1f 4f       	sbci	r17, 0xFF	; 255
 574:	a4 01       	movw	r20, r8
 576:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__ultoa_invert>
 57a:	a8 2e       	mov	r10, r24
 57c:	a8 18       	sub	r10, r8
 57e:	fb 2d       	mov	r31, r11
 580:	ff 77       	andi	r31, 0x7F	; 127
 582:	bf 2e       	mov	r11, r31
 584:	b6 fe       	sbrs	r11, 6
 586:	0b c0       	rjmp	.+22     	; 0x59e <__stack+0x9f>
 588:	2b 2d       	mov	r18, r11
 58a:	2e 7f       	andi	r18, 0xFE	; 254
 58c:	a5 14       	cp	r10, r5
 58e:	50 f4       	brcc	.+20     	; 0x5a4 <__stack+0xa5>
 590:	b4 fe       	sbrs	r11, 4
 592:	0a c0       	rjmp	.+20     	; 0x5a8 <__stack+0xa9>
 594:	b2 fc       	sbrc	r11, 2
 596:	08 c0       	rjmp	.+16     	; 0x5a8 <__stack+0xa9>
 598:	2b 2d       	mov	r18, r11
 59a:	2e 7e       	andi	r18, 0xEE	; 238
 59c:	05 c0       	rjmp	.+10     	; 0x5a8 <__stack+0xa9>
 59e:	7a 2c       	mov	r7, r10
 5a0:	2b 2d       	mov	r18, r11
 5a2:	03 c0       	rjmp	.+6      	; 0x5aa <__stack+0xab>
 5a4:	7a 2c       	mov	r7, r10
 5a6:	01 c0       	rjmp	.+2      	; 0x5aa <__stack+0xab>
 5a8:	75 2c       	mov	r7, r5
 5aa:	24 ff       	sbrs	r18, 4
 5ac:	0d c0       	rjmp	.+26     	; 0x5c8 <__stack+0xc9>
 5ae:	fe 01       	movw	r30, r28
 5b0:	ea 0d       	add	r30, r10
 5b2:	f1 1d       	adc	r31, r1
 5b4:	80 81       	ld	r24, Z
 5b6:	80 33       	cpi	r24, 0x30	; 48
 5b8:	11 f4       	brne	.+4      	; 0x5be <__stack+0xbf>
 5ba:	29 7e       	andi	r18, 0xE9	; 233
 5bc:	09 c0       	rjmp	.+18     	; 0x5d0 <__stack+0xd1>
 5be:	22 ff       	sbrs	r18, 2
 5c0:	06 c0       	rjmp	.+12     	; 0x5ce <__stack+0xcf>
 5c2:	73 94       	inc	r7
 5c4:	73 94       	inc	r7
 5c6:	04 c0       	rjmp	.+8      	; 0x5d0 <__stack+0xd1>
 5c8:	82 2f       	mov	r24, r18
 5ca:	86 78       	andi	r24, 0x86	; 134
 5cc:	09 f0       	breq	.+2      	; 0x5d0 <__stack+0xd1>
 5ce:	73 94       	inc	r7
 5d0:	23 fd       	sbrc	r18, 3
 5d2:	13 c0       	rjmp	.+38     	; 0x5fa <__stack+0xfb>
 5d4:	20 ff       	sbrs	r18, 0
 5d6:	06 c0       	rjmp	.+12     	; 0x5e4 <__stack+0xe5>
 5d8:	5a 2c       	mov	r5, r10
 5da:	73 14       	cp	r7, r3
 5dc:	18 f4       	brcc	.+6      	; 0x5e4 <__stack+0xe5>
 5de:	53 0c       	add	r5, r3
 5e0:	57 18       	sub	r5, r7
 5e2:	73 2c       	mov	r7, r3
 5e4:	73 14       	cp	r7, r3
 5e6:	68 f4       	brcc	.+26     	; 0x602 <__stack+0x103>
 5e8:	b7 01       	movw	r22, r14
 5ea:	80 e2       	ldi	r24, 0x20	; 32
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	2c 87       	std	Y+12, r18	; 0x0c
 5f0:	0e 94 34 01 	call	0x268	; 0x268 <fputc>
 5f4:	73 94       	inc	r7
 5f6:	2c 85       	ldd	r18, Y+12	; 0x0c
 5f8:	f5 cf       	rjmp	.-22     	; 0x5e4 <__stack+0xe5>
 5fa:	73 14       	cp	r7, r3
 5fc:	10 f4       	brcc	.+4      	; 0x602 <__stack+0x103>
 5fe:	37 18       	sub	r3, r7
 600:	01 c0       	rjmp	.+2      	; 0x604 <__stack+0x105>
 602:	31 2c       	mov	r3, r1
 604:	24 ff       	sbrs	r18, 4
 606:	12 c0       	rjmp	.+36     	; 0x62c <__stack+0x12d>
 608:	b7 01       	movw	r22, r14
 60a:	80 e3       	ldi	r24, 0x30	; 48
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	2c 87       	std	Y+12, r18	; 0x0c
 610:	0e 94 34 01 	call	0x268	; 0x268 <fputc>
 614:	2c 85       	ldd	r18, Y+12	; 0x0c
 616:	22 ff       	sbrs	r18, 2
 618:	17 c0       	rjmp	.+46     	; 0x648 <__stack+0x149>
 61a:	21 ff       	sbrs	r18, 1
 61c:	03 c0       	rjmp	.+6      	; 0x624 <__stack+0x125>
 61e:	88 e5       	ldi	r24, 0x58	; 88
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	02 c0       	rjmp	.+4      	; 0x628 <__stack+0x129>
 624:	88 e7       	ldi	r24, 0x78	; 120
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	b7 01       	movw	r22, r14
 62a:	0c c0       	rjmp	.+24     	; 0x644 <__stack+0x145>
 62c:	82 2f       	mov	r24, r18
 62e:	86 78       	andi	r24, 0x86	; 134
 630:	59 f0       	breq	.+22     	; 0x648 <__stack+0x149>
 632:	21 fd       	sbrc	r18, 1
 634:	02 c0       	rjmp	.+4      	; 0x63a <__stack+0x13b>
 636:	80 e2       	ldi	r24, 0x20	; 32
 638:	01 c0       	rjmp	.+2      	; 0x63c <__stack+0x13d>
 63a:	8b e2       	ldi	r24, 0x2B	; 43
 63c:	27 fd       	sbrc	r18, 7
 63e:	8d e2       	ldi	r24, 0x2D	; 45
 640:	b7 01       	movw	r22, r14
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	0e 94 34 01 	call	0x268	; 0x268 <fputc>
 648:	a5 14       	cp	r10, r5
 64a:	38 f4       	brcc	.+14     	; 0x65a <__stack+0x15b>
 64c:	b7 01       	movw	r22, r14
 64e:	80 e3       	ldi	r24, 0x30	; 48
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	0e 94 34 01 	call	0x268	; 0x268 <fputc>
 656:	5a 94       	dec	r5
 658:	f7 cf       	rjmp	.-18     	; 0x648 <__stack+0x149>
 65a:	aa 94       	dec	r10
 65c:	f4 01       	movw	r30, r8
 65e:	ea 0d       	add	r30, r10
 660:	f1 1d       	adc	r31, r1
 662:	80 81       	ld	r24, Z
 664:	b7 01       	movw	r22, r14
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	0e 94 34 01 	call	0x268	; 0x268 <fputc>
 66c:	a1 10       	cpse	r10, r1
 66e:	f5 cf       	rjmp	.-22     	; 0x65a <__stack+0x15b>
 670:	33 20       	and	r3, r3
 672:	09 f4       	brne	.+2      	; 0x676 <__stack+0x177>
 674:	51 ce       	rjmp	.-862    	; 0x318 <vfprintf+0x24>
 676:	b7 01       	movw	r22, r14
 678:	80 e2       	ldi	r24, 0x20	; 32
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	0e 94 34 01 	call	0x268	; 0x268 <fputc>
 680:	3a 94       	dec	r3
 682:	f6 cf       	rjmp	.-20     	; 0x670 <__stack+0x171>
 684:	f7 01       	movw	r30, r14
 686:	86 81       	ldd	r24, Z+6	; 0x06
 688:	97 81       	ldd	r25, Z+7	; 0x07
 68a:	02 c0       	rjmp	.+4      	; 0x690 <__stack+0x191>
 68c:	8f ef       	ldi	r24, 0xFF	; 255
 68e:	9f ef       	ldi	r25, 0xFF	; 255
 690:	2c 96       	adiw	r28, 0x0c	; 12
 692:	e2 e1       	ldi	r30, 0x12	; 18
 694:	0c 94 dc 03 	jmp	0x7b8	; 0x7b8 <__epilogue_restores__>

00000698 <strnlen_P>:
 698:	fc 01       	movw	r30, r24
 69a:	05 90       	lpm	r0, Z+
 69c:	61 50       	subi	r22, 0x01	; 1
 69e:	70 40       	sbci	r23, 0x00	; 0
 6a0:	01 10       	cpse	r0, r1
 6a2:	d8 f7       	brcc	.-10     	; 0x69a <strnlen_P+0x2>
 6a4:	80 95       	com	r24
 6a6:	90 95       	com	r25
 6a8:	8e 0f       	add	r24, r30
 6aa:	9f 1f       	adc	r25, r31
 6ac:	08 95       	ret

000006ae <strnlen>:
 6ae:	fc 01       	movw	r30, r24
 6b0:	61 50       	subi	r22, 0x01	; 1
 6b2:	70 40       	sbci	r23, 0x00	; 0
 6b4:	01 90       	ld	r0, Z+
 6b6:	01 10       	cpse	r0, r1
 6b8:	d8 f7       	brcc	.-10     	; 0x6b0 <strnlen+0x2>
 6ba:	80 95       	com	r24
 6bc:	90 95       	com	r25
 6be:	8e 0f       	add	r24, r30
 6c0:	9f 1f       	adc	r25, r31
 6c2:	08 95       	ret

000006c4 <__ultoa_invert>:
 6c4:	fa 01       	movw	r30, r20
 6c6:	aa 27       	eor	r26, r26
 6c8:	28 30       	cpi	r18, 0x08	; 8
 6ca:	51 f1       	breq	.+84     	; 0x720 <__ultoa_invert+0x5c>
 6cc:	20 31       	cpi	r18, 0x10	; 16
 6ce:	81 f1       	breq	.+96     	; 0x730 <__ultoa_invert+0x6c>
 6d0:	e8 94       	clt
 6d2:	6f 93       	push	r22
 6d4:	6e 7f       	andi	r22, 0xFE	; 254
 6d6:	6e 5f       	subi	r22, 0xFE	; 254
 6d8:	7f 4f       	sbci	r23, 0xFF	; 255
 6da:	8f 4f       	sbci	r24, 0xFF	; 255
 6dc:	9f 4f       	sbci	r25, 0xFF	; 255
 6de:	af 4f       	sbci	r26, 0xFF	; 255
 6e0:	b1 e0       	ldi	r27, 0x01	; 1
 6e2:	3e d0       	rcall	.+124    	; 0x760 <__ultoa_invert+0x9c>
 6e4:	b4 e0       	ldi	r27, 0x04	; 4
 6e6:	3c d0       	rcall	.+120    	; 0x760 <__ultoa_invert+0x9c>
 6e8:	67 0f       	add	r22, r23
 6ea:	78 1f       	adc	r23, r24
 6ec:	89 1f       	adc	r24, r25
 6ee:	9a 1f       	adc	r25, r26
 6f0:	a1 1d       	adc	r26, r1
 6f2:	68 0f       	add	r22, r24
 6f4:	79 1f       	adc	r23, r25
 6f6:	8a 1f       	adc	r24, r26
 6f8:	91 1d       	adc	r25, r1
 6fa:	a1 1d       	adc	r26, r1
 6fc:	6a 0f       	add	r22, r26
 6fe:	71 1d       	adc	r23, r1
 700:	81 1d       	adc	r24, r1
 702:	91 1d       	adc	r25, r1
 704:	a1 1d       	adc	r26, r1
 706:	20 d0       	rcall	.+64     	; 0x748 <__ultoa_invert+0x84>
 708:	09 f4       	brne	.+2      	; 0x70c <__ultoa_invert+0x48>
 70a:	68 94       	set
 70c:	3f 91       	pop	r19
 70e:	2a e0       	ldi	r18, 0x0A	; 10
 710:	26 9f       	mul	r18, r22
 712:	11 24       	eor	r1, r1
 714:	30 19       	sub	r19, r0
 716:	30 5d       	subi	r19, 0xD0	; 208
 718:	31 93       	st	Z+, r19
 71a:	de f6       	brtc	.-74     	; 0x6d2 <__ultoa_invert+0xe>
 71c:	cf 01       	movw	r24, r30
 71e:	08 95       	ret
 720:	46 2f       	mov	r20, r22
 722:	47 70       	andi	r20, 0x07	; 7
 724:	40 5d       	subi	r20, 0xD0	; 208
 726:	41 93       	st	Z+, r20
 728:	b3 e0       	ldi	r27, 0x03	; 3
 72a:	0f d0       	rcall	.+30     	; 0x74a <__ultoa_invert+0x86>
 72c:	c9 f7       	brne	.-14     	; 0x720 <__ultoa_invert+0x5c>
 72e:	f6 cf       	rjmp	.-20     	; 0x71c <__ultoa_invert+0x58>
 730:	46 2f       	mov	r20, r22
 732:	4f 70       	andi	r20, 0x0F	; 15
 734:	40 5d       	subi	r20, 0xD0	; 208
 736:	4a 33       	cpi	r20, 0x3A	; 58
 738:	18 f0       	brcs	.+6      	; 0x740 <__ultoa_invert+0x7c>
 73a:	49 5d       	subi	r20, 0xD9	; 217
 73c:	31 fd       	sbrc	r19, 1
 73e:	40 52       	subi	r20, 0x20	; 32
 740:	41 93       	st	Z+, r20
 742:	02 d0       	rcall	.+4      	; 0x748 <__ultoa_invert+0x84>
 744:	a9 f7       	brne	.-22     	; 0x730 <__ultoa_invert+0x6c>
 746:	ea cf       	rjmp	.-44     	; 0x71c <__ultoa_invert+0x58>
 748:	b4 e0       	ldi	r27, 0x04	; 4
 74a:	a6 95       	lsr	r26
 74c:	97 95       	ror	r25
 74e:	87 95       	ror	r24
 750:	77 95       	ror	r23
 752:	67 95       	ror	r22
 754:	ba 95       	dec	r27
 756:	c9 f7       	brne	.-14     	; 0x74a <__ultoa_invert+0x86>
 758:	00 97       	sbiw	r24, 0x00	; 0
 75a:	61 05       	cpc	r22, r1
 75c:	71 05       	cpc	r23, r1
 75e:	08 95       	ret
 760:	9b 01       	movw	r18, r22
 762:	ac 01       	movw	r20, r24
 764:	0a 2e       	mov	r0, r26
 766:	06 94       	lsr	r0
 768:	57 95       	ror	r21
 76a:	47 95       	ror	r20
 76c:	37 95       	ror	r19
 76e:	27 95       	ror	r18
 770:	ba 95       	dec	r27
 772:	c9 f7       	brne	.-14     	; 0x766 <__ultoa_invert+0xa2>
 774:	62 0f       	add	r22, r18
 776:	73 1f       	adc	r23, r19
 778:	84 1f       	adc	r24, r20
 77a:	95 1f       	adc	r25, r21
 77c:	a0 1d       	adc	r26, r0
 77e:	08 95       	ret

00000780 <__prologue_saves__>:
 780:	2f 92       	push	r2
 782:	3f 92       	push	r3
 784:	4f 92       	push	r4
 786:	5f 92       	push	r5
 788:	6f 92       	push	r6
 78a:	7f 92       	push	r7
 78c:	8f 92       	push	r8
 78e:	9f 92       	push	r9
 790:	af 92       	push	r10
 792:	bf 92       	push	r11
 794:	cf 92       	push	r12
 796:	df 92       	push	r13
 798:	ef 92       	push	r14
 79a:	ff 92       	push	r15
 79c:	0f 93       	push	r16
 79e:	1f 93       	push	r17
 7a0:	cf 93       	push	r28
 7a2:	df 93       	push	r29
 7a4:	cd b7       	in	r28, 0x3d	; 61
 7a6:	de b7       	in	r29, 0x3e	; 62
 7a8:	ca 1b       	sub	r28, r26
 7aa:	db 0b       	sbc	r29, r27
 7ac:	0f b6       	in	r0, 0x3f	; 63
 7ae:	f8 94       	cli
 7b0:	de bf       	out	0x3e, r29	; 62
 7b2:	0f be       	out	0x3f, r0	; 63
 7b4:	cd bf       	out	0x3d, r28	; 61
 7b6:	09 94       	ijmp

000007b8 <__epilogue_restores__>:
 7b8:	2a 88       	ldd	r2, Y+18	; 0x12
 7ba:	39 88       	ldd	r3, Y+17	; 0x11
 7bc:	48 88       	ldd	r4, Y+16	; 0x10
 7be:	5f 84       	ldd	r5, Y+15	; 0x0f
 7c0:	6e 84       	ldd	r6, Y+14	; 0x0e
 7c2:	7d 84       	ldd	r7, Y+13	; 0x0d
 7c4:	8c 84       	ldd	r8, Y+12	; 0x0c
 7c6:	9b 84       	ldd	r9, Y+11	; 0x0b
 7c8:	aa 84       	ldd	r10, Y+10	; 0x0a
 7ca:	b9 84       	ldd	r11, Y+9	; 0x09
 7cc:	c8 84       	ldd	r12, Y+8	; 0x08
 7ce:	df 80       	ldd	r13, Y+7	; 0x07
 7d0:	ee 80       	ldd	r14, Y+6	; 0x06
 7d2:	fd 80       	ldd	r15, Y+5	; 0x05
 7d4:	0c 81       	ldd	r16, Y+4	; 0x04
 7d6:	1b 81       	ldd	r17, Y+3	; 0x03
 7d8:	aa 81       	ldd	r26, Y+2	; 0x02
 7da:	b9 81       	ldd	r27, Y+1	; 0x01
 7dc:	ce 0f       	add	r28, r30
 7de:	d1 1d       	adc	r29, r1
 7e0:	0f b6       	in	r0, 0x3f	; 63
 7e2:	f8 94       	cli
 7e4:	de bf       	out	0x3e, r29	; 62
 7e6:	0f be       	out	0x3f, r0	; 63
 7e8:	cd bf       	out	0x3d, r28	; 61
 7ea:	ed 01       	movw	r28, r26
 7ec:	08 95       	ret

000007ee <_exit>:
 7ee:	f8 94       	cli

000007f0 <__stop_program>:
 7f0:	ff cf       	rjmp	.-2      	; 0x7f0 <__stop_program>
