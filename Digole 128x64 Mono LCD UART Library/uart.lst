   1               		.file	"uart.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	uart_putchar
  12               	uart_putchar:
  13               	.LFB2:
  14               		.file 1 "uart.c"
   1:uart.c        **** //Defines
   2:uart.c        **** #ifndef BAUD
   3:uart.c        **** #define BAUD 9600
   4:uart.c        **** #endif
   5:uart.c        **** //Includes
   6:uart.c        **** #include <avr/io.h>
   7:uart.c        **** #include <stdio.h>
   8:uart.c        **** #include <util/setbaud.h>
   9:uart.c        **** 
  10:uart.c        **** //Prototypes
  11:uart.c        **** int uart_putchar(char c, FILE *stream);
  12:uart.c        **** int uart_getchar(FILE *stream);
  13:uart.c        **** 
  14:uart.c        **** //Globals
  15:uart.c        **** FILE uart_tx = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
  16:uart.c        **** FILE uart_rx = FDEV_SETUP_STREAM(NULL,uart_getchar, _FDEV_SETUP_READ);
  17:uart.c        **** 
  18:uart.c        **** /*
  19:uart.c        ****  * Initializes the serial port at the baud rate indicated by the 
  20:uart.c        ****  * BAUD definition above. The serial port parameters are as follows:
  21:uart.c        ****  * - 8 bit data
  22:uart.c        ****  * - Transmitter Enabled
  23:uart.c        ****  * - Receiver Enabled
  24:uart.c        ****  *
  25:uart.c        ****  * @param (void)
  26:uart.c        ****  * @return (void)
  27:uart.c        ****  */
  28:uart.c        **** void uart_init(void) {
  29:uart.c        ****     UBRR0H = UBRRH_VALUE;
  30:uart.c        ****     UBRR0L = UBRRL_VALUE;
  31:uart.c        **** 
  32:uart.c        ****     UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
  33:uart.c        ****     UCSR0B = _BV(RXEN0) | _BV(TXEN0);
  34:uart.c        **** }
  35:uart.c        **** /*
  36:uart.c        ****  * Sends a character through the transmitter interface.
  37:uart.c        ****  *
  38:uart.c        ****  * @param (char) c, (FILE *) stream
  39:uart.c        ****  * @return (int) 1
  40:uart.c        ****  */
  41:uart.c        **** int uart_putchar(char c, FILE *stream) {
  15               		.loc 1 41 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22               	/* prologue: function */
  23               	/* frame size = 0 */
  24               	/* stack size = 1 */
  25               	.L__stack_usage = 1
  26 0002 C82F      		mov r28,r24
  42:uart.c        ****     if (c == '\n') {
  27               		.loc 1 42 0
  28 0004 8A30      		cpi r24,lo8(10)
  29 0006 01F4      		brne .L4
  43:uart.c        ****         uart_putchar('\r', stream);
  30               		.loc 1 43 0
  31 0008 8DE0      		ldi r24,lo8(13)
  32               	.LVL1:
  33 000a 0E94 0000 		call uart_putchar
  34               	.LVL2:
  35               	.L4:
  44:uart.c        ****     }
  45:uart.c        ****     loop_until_bit_is_set(UCSR0A, UDRE0);
  36               		.loc 1 45 0 discriminator 1
  37 000e 8091 C000 		lds r24,192
  38 0012 85FF      		sbrs r24,5
  39 0014 00C0      		rjmp .L4
  46:uart.c        ****     UDR0 = c;
  40               		.loc 1 46 0
  41 0016 C093 C600 		sts 198,r28
  47:uart.c        ****     return 0;
  48:uart.c        **** }
  42               		.loc 1 48 0
  43 001a 80E0      		ldi r24,0
  44 001c 90E0      		ldi r25,0
  45               	/* epilogue start */
  46 001e CF91      		pop r28
  47               	.LVL3:
  48 0020 0895      		ret
  49               		.cfi_endproc
  50               	.LFE2:
  52               	.global	uart_getchar
  54               	uart_getchar:
  55               	.LFB3:
  49:uart.c        **** 
  50:uart.c        **** int uart_getchar(FILE *stream) {
  56               		.loc 1 50 0
  57               		.cfi_startproc
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  62               	.LVL4:
  63               	.L8:
  51:uart.c        ****     loop_until_bit_is_set(UCSR0A, RXC0);
  64               		.loc 1 51 0 discriminator 1
  65 0022 8091 C000 		lds r24,192
  66 0026 87FF      		sbrs r24,7
  67 0028 00C0      		rjmp .L8
  52:uart.c        ****     return UDR0;
  68               		.loc 1 52 0
  69 002a 8091 C600 		lds r24,198
  53:uart.c        **** }
  70               		.loc 1 53 0
  71 002e 90E0      		ldi r25,0
  72 0030 0895      		ret
  73               		.cfi_endproc
  74               	.LFE3:
  76               	.global	uart_init
  78               	uart_init:
  79               	.LFB1:
  28:uart.c        **** void uart_init(void) {
  80               		.loc 1 28 0
  81               		.cfi_startproc
  82               	/* prologue: function */
  83               	/* frame size = 0 */
  84               	/* stack size = 0 */
  85               	.L__stack_usage = 0
  29:uart.c        ****     UBRR0H = UBRRH_VALUE;
  86               		.loc 1 29 0
  87 0032 1092 C500 		sts 197,__zero_reg__
  30:uart.c        ****     UBRR0L = UBRRL_VALUE;
  88               		.loc 1 30 0
  89 0036 87E6      		ldi r24,lo8(103)
  90 0038 8093 C400 		sts 196,r24
  32:uart.c        ****     UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
  91               		.loc 1 32 0
  92 003c 86E0      		ldi r24,lo8(6)
  93 003e 8093 C200 		sts 194,r24
  33:uart.c        ****     UCSR0B = _BV(RXEN0) | _BV(TXEN0);
  94               		.loc 1 33 0
  95 0042 88E1      		ldi r24,lo8(24)
  96 0044 8093 C100 		sts 193,r24
  97 0048 0895      		ret
  98               		.cfi_endproc
  99               	.LFE1:
 101               	.global	receiveWord
 103               	receiveWord:
 104               	.LFB4:
  54:uart.c        **** unsigned char receiveWord(const uint16_t length,unsigned char * response){
 105               		.loc 1 54 0
 106               		.cfi_startproc
 107               	.LVL5:
 108 004a AF92      		push r10
 109               	.LCFI1:
 110               		.cfi_def_cfa_offset 3
 111               		.cfi_offset 10, -2
 112 004c BF92      		push r11
 113               	.LCFI2:
 114               		.cfi_def_cfa_offset 4
 115               		.cfi_offset 11, -3
 116 004e CF92      		push r12
 117               	.LCFI3:
 118               		.cfi_def_cfa_offset 5
 119               		.cfi_offset 12, -4
 120 0050 DF92      		push r13
 121               	.LCFI4:
 122               		.cfi_def_cfa_offset 6
 123               		.cfi_offset 13, -5
 124 0052 EF92      		push r14
 125               	.LCFI5:
 126               		.cfi_def_cfa_offset 7
 127               		.cfi_offset 14, -6
 128 0054 FF92      		push r15
 129               	.LCFI6:
 130               		.cfi_def_cfa_offset 8
 131               		.cfi_offset 15, -7
 132 0056 0F93      		push r16
 133               	.LCFI7:
 134               		.cfi_def_cfa_offset 9
 135               		.cfi_offset 16, -8
 136 0058 1F93      		push r17
 137               	.LCFI8:
 138               		.cfi_def_cfa_offset 10
 139               		.cfi_offset 17, -9
 140 005a CF93      		push r28
 141               	.LCFI9:
 142               		.cfi_def_cfa_offset 11
 143               		.cfi_offset 28, -10
 144 005c DF93      		push r29
 145               	.LCFI10:
 146               		.cfi_def_cfa_offset 12
 147               		.cfi_offset 29, -11
 148               	/* prologue: function */
 149               	/* frame size = 0 */
 150               	/* stack size = 10 */
 151               	.L__stack_usage = 10
 152 005e 6C01      		movw r12,r24
 153 0060 7B01      		movw r14,r22
 154               	.LVL6:
  55:uart.c        ****     uint16_t index = 0;
  56:uart.c        ****     if(length == 0) return 0;
 155               		.loc 1 56 0
 156 0062 0097      		sbiw r24,0
 157 0064 01F0      		breq .L16
 158 0066 8B01      		movw r16,r22
 159 0068 C0E0      		ldi r28,0
 160 006a D0E0      		ldi r29,0
 161               	.LVL7:
 162               	.L12:
  57:uart.c        ****     
  58:uart.c        ****     for(index = 0;index < length;index++){
  59:uart.c        ****         response[index] = getchar();
 163               		.loc 1 59 0
 164 006c 5801      		movw r10,r16
 165 006e 8091 0000 		lds r24,__iob
 166 0072 9091 0000 		lds r25,__iob+1
 167 0076 0E94 0000 		call fgetc
 168               	.LVL8:
 169 007a F801      		movw r30,r16
 170 007c 8193      		st Z+,r24
 171 007e 8F01      		movw r16,r30
  60:uart.c        ****         switch (response[index]){
 172               		.loc 1 60 0
 173 0080 8A30      		cpi r24,lo8(10)
 174 0082 01F0      		breq .L14
 175 0084 8D30      		cpi r24,lo8(13)
 176 0086 01F4      		brne .L23
 177               	.L14:
  61:uart.c        ****             case '\r':
  62:uart.c        ****             case '\n':
  63:uart.c        ****                 response[index] = '\0';
 178               		.loc 1 63 0
 179 0088 F501      		movw r30,r10
 180 008a 00C0      		rjmp .L24
 181               	.L23:
  64:uart.c        ****                 return index + 1;
  65:uart.c        ****             default:
  66:uart.c        ****                 putchar(response[index]);
 182               		.loc 1 66 0
 183 008c 6091 0000 		lds r22,__iob+2
 184 0090 7091 0000 		lds r23,__iob+2+1
 185 0094 90E0      		ldi r25,0
 186 0096 0E94 0000 		call fputc
 187               	.LVL9:
  58:uart.c        ****     for(index = 0;index < length;index++){
 188               		.loc 1 58 0
 189 009a 2196      		adiw r28,1
 190               	.LVL10:
 191 009c CC15      		cp r28,r12
 192 009e DD05      		cpc r29,r13
 193 00a0 01F4      		brne .L12
  67:uart.c        ****                 break;
  68:uart.c        ****         }
  69:uart.c        ****     }
  70:uart.c        ****     response[index] = '\0';
 194               		.loc 1 70 0
 195 00a2 F701      		movw r30,r14
 196 00a4 EC0F      		add r30,r28
 197 00a6 FD1F      		adc r31,r29
 198               	.L24:
 199 00a8 1082      		st Z,__zero_reg__
  71:uart.c        ****     return index + 1;
 200               		.loc 1 71 0
 201 00aa 8C2F      		mov r24,r28
 202 00ac 8F5F      		subi r24,lo8(-(1))
 203 00ae 00C0      		rjmp .L11
 204               	.LVL11:
 205               	.L16:
  56:uart.c        ****     if(length == 0) return 0;
 206               		.loc 1 56 0
 207 00b0 80E0      		ldi r24,0
 208               	.LVL12:
 209               	.L11:
 210               	/* epilogue start */
  72:uart.c        **** }
 211               		.loc 1 72 0
 212 00b2 DF91      		pop r29
 213 00b4 CF91      		pop r28
 214 00b6 1F91      		pop r17
 215 00b8 0F91      		pop r16
 216 00ba FF90      		pop r15
 217 00bc EF90      		pop r14
 218               	.LVL13:
 219 00be DF90      		pop r13
 220 00c0 CF90      		pop r12
 221               	.LVL14:
 222 00c2 BF90      		pop r11
 223 00c4 AF90      		pop r10
 224 00c6 0895      		ret
 225               		.cfi_endproc
 226               	.LFE4:
 228               	.global	uart_rx
 229               		.data
 232               	uart_rx:
 233 0000 0000 00   		.zero	3
 234 0003 01        		.byte	1
 235 0004 0000 0000 		.zero	4
 236 0008 0000      		.word	0
 237 000a 0000      		.word	gs(uart_getchar)
 238 000c 0000      		.word	0
 239               	.global	uart_tx
 242               	uart_tx:
 243 000e 0000 00   		.zero	3
 244 0011 02        		.byte	2
 245 0012 0000 0000 		.zero	4
 246 0016 0000      		.word	gs(uart_putchar)
 247 0018 0000      		.word	0
 248 001a 0000      		.word	0
 249               		.text
 250               	.Letext0:
 251               		.file 2 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 252               		.file 3 "/usr/local/CrossPack-AVR-20131216/avr/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cc3CM5tL.s:2      *ABS*:0000003e __SP_H__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cc3CM5tL.s:3      *ABS*:0000003d __SP_L__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cc3CM5tL.s:4      *ABS*:0000003f __SREG__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cc3CM5tL.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cc3CM5tL.s:6      *ABS*:00000001 __zero_reg__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cc3CM5tL.s:12     .text:00000000 uart_putchar
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cc3CM5tL.s:54     .text:00000022 uart_getchar
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cc3CM5tL.s:78     .text:00000032 uart_init
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cc3CM5tL.s:103    .text:0000004a receiveWord
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cc3CM5tL.s:232    .data:00000000 uart_rx
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cc3CM5tL.s:242    .data:0000000e uart_tx

UNDEFINED SYMBOLS
__iob
fgetc
fputc
__do_copy_data
