   1               		.file	"uart.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	uart_putchar
  12               	uart_putchar:
  13               	.LFB2:
  14               		.file 1 "uart.c"
   1:uart.c        **** //Defines
   2:uart.c        **** #ifndef BAUD
   3:uart.c        **** #define BAUD 9600
   4:uart.c        **** #endif
   5:uart.c        **** //Includes
   6:uart.c        **** #include <avr/io.h>
   7:uart.c        **** #include <stdio.h>
   8:uart.c        **** #include <util/setbaud.h>
   9:uart.c        **** 
  10:uart.c        **** //Prototypes
  11:uart.c        **** int uart_putchar(char c, FILE *stream);
  12:uart.c        **** int uart_getchar(FILE *stream);
  13:uart.c        **** 
  14:uart.c        **** //Globals
  15:uart.c        **** FILE uart_tx = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
  16:uart.c        **** FILE uart_rx = FDEV_SETUP_STREAM(NULL,uart_getchar, _FDEV_SETUP_READ);
  17:uart.c        **** 
  18:uart.c        **** /*
  19:uart.c        ****  * Initializes the serial port at the baud rate indicated by the 
  20:uart.c        ****  * BAUD definition above. The serial port parameters are as follows:
  21:uart.c        ****  * - 8 bit data
  22:uart.c        ****  * - Transmitter Enabled
  23:uart.c        ****  * - Receiver Enabled
  24:uart.c        ****  *
  25:uart.c        ****  * @param (void)
  26:uart.c        ****  * @return (void)
  27:uart.c        ****  */
  28:uart.c        **** void uart_init(void) {
  29:uart.c        ****     UBRR0H = UBRRH_VALUE;
  30:uart.c        ****     UBRR0L = UBRRL_VALUE;
  31:uart.c        **** 
  32:uart.c        ****     UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
  33:uart.c        ****     UCSR0B = _BV(RXEN0) | _BV(TXEN0);
  34:uart.c        **** }
  35:uart.c        **** /*
  36:uart.c        ****  * Sends a character through the transmitter interface.
  37:uart.c        ****  *
  38:uart.c        ****  * @param (char) c, (FILE *) stream
  39:uart.c        ****  * @return (int) 1
  40:uart.c        ****  */
  41:uart.c        **** int uart_putchar(char c, FILE *stream) {
  15               		.loc 1 41 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22               	/* prologue: function */
  23               	/* frame size = 0 */
  24               	/* stack size = 1 */
  25               	.L__stack_usage = 1
  26 0002 C82F      		mov r28,r24
  42:uart.c        ****     if (c == '\n') {
  27               		.loc 1 42 0
  28 0004 8A30      		cpi r24,lo8(10)
  29 0006 01F4      		brne .L4
  43:uart.c        ****         uart_putchar('\r', stream);
  30               		.loc 1 43 0
  31 0008 8DE0      		ldi r24,lo8(13)
  32               	.LVL1:
  33 000a 0E94 0000 		call uart_putchar
  34               	.LVL2:
  35               	.L4:
  44:uart.c        ****     }
  45:uart.c        ****     loop_until_bit_is_set(UCSR0A, UDRE0);
  36               		.loc 1 45 0 discriminator 1
  37 000e 8091 C000 		lds r24,192
  38 0012 85FF      		sbrs r24,5
  39 0014 00C0      		rjmp .L4
  46:uart.c        ****     UDR0 = c;
  40               		.loc 1 46 0
  41 0016 C093 C600 		sts 198,r28
  47:uart.c        ****     return 0;
  48:uart.c        **** }
  42               		.loc 1 48 0
  43 001a 80E0      		ldi r24,0
  44 001c 90E0      		ldi r25,0
  45               	/* epilogue start */
  46 001e CF91      		pop r28
  47               	.LVL3:
  48 0020 0895      		ret
  49               		.cfi_endproc
  50               	.LFE2:
  52               	.global	uart_getchar
  54               	uart_getchar:
  55               	.LFB3:
  49:uart.c        **** 
  50:uart.c        **** int uart_getchar(FILE *stream) {
  56               		.loc 1 50 0
  57               		.cfi_startproc
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  62               	.LVL4:
  63               	.L8:
  51:uart.c        ****     loop_until_bit_is_set(UCSR0A, RXC0);
  64               		.loc 1 51 0 discriminator 1
  65 0022 8091 C000 		lds r24,192
  66 0026 87FF      		sbrs r24,7
  67 0028 00C0      		rjmp .L8
  52:uart.c        ****     return UDR0;
  68               		.loc 1 52 0
  69 002a 8091 C600 		lds r24,198
  53:uart.c        **** }
  70               		.loc 1 53 0
  71 002e 90E0      		ldi r25,0
  72 0030 0895      		ret
  73               		.cfi_endproc
  74               	.LFE3:
  76               	.global	uart_init
  78               	uart_init:
  79               	.LFB1:
  28:uart.c        **** void uart_init(void) {
  80               		.loc 1 28 0
  81               		.cfi_startproc
  82               	/* prologue: function */
  83               	/* frame size = 0 */
  84               	/* stack size = 0 */
  85               	.L__stack_usage = 0
  29:uart.c        ****     UBRR0H = UBRRH_VALUE;
  86               		.loc 1 29 0
  87 0032 1092 C500 		sts 197,__zero_reg__
  30:uart.c        ****     UBRR0L = UBRRL_VALUE;
  88               		.loc 1 30 0
  89 0036 87E6      		ldi r24,lo8(103)
  90 0038 8093 C400 		sts 196,r24
  32:uart.c        ****     UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
  91               		.loc 1 32 0
  92 003c 86E0      		ldi r24,lo8(6)
  93 003e 8093 C200 		sts 194,r24
  33:uart.c        ****     UCSR0B = _BV(RXEN0) | _BV(TXEN0);
  94               		.loc 1 33 0
  95 0042 88E1      		ldi r24,lo8(24)
  96 0044 8093 C100 		sts 193,r24
  97 0048 0895      		ret
  98               		.cfi_endproc
  99               	.LFE1:
 101               	.global	uart_rx
 102               		.data
 105               	uart_rx:
 106 0000 0000 00   		.zero	3
 107 0003 01        		.byte	1
 108 0004 0000 0000 		.zero	4
 109 0008 0000      		.word	0
 110 000a 0000      		.word	gs(uart_getchar)
 111 000c 0000      		.word	0
 112               	.global	uart_tx
 115               	uart_tx:
 116 000e 0000 00   		.zero	3
 117 0011 02        		.byte	2
 118 0012 0000 0000 		.zero	4
 119 0016 0000      		.word	gs(uart_putchar)
 120 0018 0000      		.word	0
 121 001a 0000      		.word	0
 122               		.text
 123               	.Letext0:
 124               		.file 2 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 125               		.file 3 "/usr/local/CrossPack-AVR-20131216/avr/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cctuHb6u.s:2      *ABS*:0000003e __SP_H__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cctuHb6u.s:3      *ABS*:0000003d __SP_L__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cctuHb6u.s:4      *ABS*:0000003f __SREG__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cctuHb6u.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cctuHb6u.s:6      *ABS*:00000001 __zero_reg__
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cctuHb6u.s:12     .text:00000000 uart_putchar
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cctuHb6u.s:54     .text:00000022 uart_getchar
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cctuHb6u.s:78     .text:00000032 uart_init
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cctuHb6u.s:105    .data:00000000 uart_rx
/var/folders/j8/03g8qp616k1dqr37k98mkv2c0000gn/T//cctuHb6u.s:115    .data:0000000e uart_tx

UNDEFINED SYMBOLS
__do_copy_data
